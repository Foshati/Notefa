(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const c of n)if(c.type==="childList")for(const m of c.addedNodes)m.tagName==="LINK"&&m.rel==="modulepreload"&&r(m)}).observe(document,{childList:!0,subtree:!0});function l(n){const c={};return n.integrity&&(c.integrity=n.integrity),n.referrerPolicy&&(c.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?c.credentials="include":n.crossOrigin==="anonymous"?c.credentials="omit":c.credentials="same-origin",c}function r(n){if(n.ep)return;n.ep=!0;const c=l(n);fetch(n.href,c)}})();let a;const f=new Uint8Array(16);function h(){if(!a&&(a=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!a))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return a(f)}const o=[];for(let e=0;e<256;++e)o.push((e+256).toString(16).slice(1));function S(e,t=0){return o[e[t+0]]+o[e[t+1]]+o[e[t+2]]+o[e[t+3]]+"-"+o[e[t+4]]+o[e[t+5]]+"-"+o[e[t+6]]+o[e[t+7]]+"-"+o[e[t+8]]+o[e[t+9]]+"-"+o[e[t+10]]+o[e[t+11]]+o[e[t+12]]+o[e[t+13]]+o[e[t+14]]+o[e[t+15]]}const x=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),y={randomUUID:x};function w(e,t,l){if(y.randomUUID&&!t&&!e)return y.randomUUID();e=e||{};const r=e.random||(e.rng||h)();if(r[6]=r[6]&15|64,r[8]=r[8]&63|128,t){l=l||0;for(let n=0;n<16;++n)t[l+n]=r[n];return t}return S(r)}const p=document.querySelector("#note-form"),i=document.querySelector("#title"),d=document.querySelector("#text"),s=document.querySelector("#itemNote");let u=E();u.forEach(v);const g=document.querySelector("#clear-notes");p==null||p.addEventListener("submit",e=>{if(e.preventDefault(),(i==null?void 0:i.value)==null||(d==null?void 0:d.value)==null)return;const t={id:w(),title:i==null?void 0:i.value,text:d==null?void 0:d.value};u.push(t),v(t),L(),i.value="",d.value=""});g==null||g.addEventListener("click",()=>{U()});function v(e){const t=document.createElement("div"),l=document.createElement("h2"),r=document.createElement("p"),n=document.createElement("button");n.innerHTML=`
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor" class="w-6 h-6 text-red-500 hover:text-red-700">
    <path fill-rule="evenodd" d="M5.47 5.47a.75.75 0 0 1 1.06 0L12 10.94l5.47-5.47a.75.75 0 1 1 1.06 1.06L13.06 12l5.47 5.47a.75.75 0 1 1-1.06 1.06L12 13.06l-5.47 5.47a.75.75 0 0 1-1.06-1.06L10.94 12 5.47 6.53a.75.75 0 0 1 0-1.06Z" clip-rule="evenodd" />
  </svg>
`,l.append(e.title),r.append(e.text),t.append(l,r,n),s==null||s.append(t),t.classList.add("p-4","bg-slate-400","max-w-6xl","rounded","w-3/4","m-4"),l.classList.add("text-2xl","text-blue-800"),n.classList.add("float-right"),n.addEventListener("click",()=>{I(e.id),t.remove()})}function L(){localStorage.setItem("items",JSON.stringify(u))}function E(){const e=localStorage.getItem("items");return e==null?[]:JSON.parse(e)}function U(){localStorage.removeItem("items"),s.innerHTML="",u=[]}function I(e){u=u.filter(t=>t.id!==e),L()}//!add event listener for select element and print in console
//!   error handling
//! Create a new note element
//! Append the new note to the target element
//! Clear the form after successful submission (optional)
